buildscript {
	repositories {
		maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }

		mavenCentral()
	}
	dependencies {
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
	}
}

plugins {
	id 'eclipse'
	id 'idea'
	id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

apply plugin: 'org.spongepowered.mixin'

group = mod_group_id
version = "${modloader}-${mod_version}-${minecraft_version}"

base {
	archivesName = mod_id
}

java {
	toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
	mappings channel: mapping_channel, version: mapping_version

	copyIdeResources = true
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

	runs {
		configureEach {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'


			property 'forge.logging.console.level', 'debug'

			mods {
				"${mod_id}" {
					source sourceSets.main
				}
			}
		}

		client {
			// Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
			property 'forge.enabledGameTestNamespaces', mod_id
		}

		server {
			property 'forge.enabledGameTestNamespaces', mod_id
			args '--nogui'
		}

		gameTestServer {
			property 'forge.enabledGameTestNamespaces', mod_id
		}

		data {
			workingDirectory project.file('run-data')

			args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
		}
	}
}

mixin {
	add sourceSets.main, "${mod_id}.refmap.json"

	config "${mod_id}.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	maven {
		name = 'GeckoLib'
		url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
		content {
			includeGroupByRegex("software\\.bernie.*")
			includeGroup("com.eliotlash.mclib")
		}
	}
	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
}

dependencies {
	minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
	implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.20.1:4.4.4')
	implementation fg.deobf('curse.maven:astikor-916493:4988266')
	annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

tasks.named('processResources', ProcessResources).configure {
	var replaceProperties = [
			minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
			forge_version: forge_version, forge_version_range: forge_version_range,
			loader_version_range: loader_version_range,
			mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
			mod_authors: mod_authors, mod_description: mod_description,
	]

	inputs.properties replaceProperties

	filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
		expand replaceProperties + [project: project]
	}}

tasks.named('jar', Jar).configure {
	manifest {
		attributes([
				"Specification-Title": mod_id,
				"Specification-Vendor": mod_authors,
				"Specification-Version": "1", // We are version 1 of ourselves
				"Implementation-Title": project.name,
				"Implementation-Version": project.jar.archiveVersion,
				"Implementation-Vendor": mod_authors,
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}

	finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
